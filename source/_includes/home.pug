div.description
    p.text Salve salve peoples, tudo na paz?

    p.text Não sei apenas eu ou mais alguém já passou por isso. A cada novo projeto, ter que refazer o workflow, com task runner, pré-processador CSS, template engine, frameworks, mi-mi-mi.

    p.text Fui um pouquinho tapado em demorar pra ter um repositório como base de workflow! Eis que surgiu esse workflow simples, porém muito eficiente!

    p.text Fiquei tão encanado com isso, que resolvi criar um workflow. Porém, uma coisa acabou me tirando o sono, literalmente. As tarefas do Gulp, muitas e muitas linhas no gulpfile.js.

    p.text Você, dev front-end que conhece e trabalha com Gulp, quantas vezes você parou pra pensar:
        span.dialog &#32;Poxa meu, quantas linhas eu não tenho em um simples gulpfile.js? Já passaram 110 linhas, que saco! Como posso melhorar isso? Não posso modularizar/componetizar igual fazemos com CSS?

    p.text Fiquei extremamente estressado em ver aquele horror. Então, mais noites com poucas horas de sono se foram, rsrs'.

    p.text Encontrei inúmeros tutoriais a respeito, porém a maioria utilizava o Browserify ou Webpack. Lendo um pouco sobre cada um deles, acabei chegando a conclusão de que eles são indicados para projetos mais complexos. Um site, portal de notícias, portfolio, hotsite não vi necessidade de implementá-los. Seria um desperdício de tecnologia!

    p.text
        | Depois de tantas pesquisas, conheci a dependência&#32;
        a.link(href='https://www.npmjs.com/package/gulp-load-plugins', target='_blank') gulp-load-plugins
        | &#32;encontrando no blog da editora&#32;
        a.link(href='https://www.packtpub.com/books/content/blogs', target='_blank') Packt Publishing
        | &#32;um EXCELENTE artigo escrito por Brian Hough: &#32;
        a.dialog.link(href='https://www.packtpub.com/books/content/how-to-simplify-your-development-workflow-with-gulp', target='_blank') How to Simplify Your Development Workflow with Gulp
        | &#32;.

    p.text
        | Com essa dependência, conseguimos criar um&#32;
        span.arquivo-code arquivo.js
        | &#32;para cada tarefa e no&#32;
        span.arquivo-code gulpfile.js
        | &#32;chamar cada tarefa utilizando o&#32;
        span.arquivo-code require
        | .

    p.text
        | Após todas as tarefas em arquivos separados, Gulp modularizado, belezinha, o arquivo&#32;
        span.arquivo-code gulpfile.js
        | &#32;ficou dessa forma:

    p.text
        pre
            code
                | 'use strict';

                | //Dev dependencies
                | const gulp = require('gulp'),
                | plugins = require('gulp-load-plugins')(),
                | config = require('./config.json');

                | //Browser Sync Task
                | require(config.tasksPath + '/browser-sync')(gulp, plugins, config);

                | //Stylus Task
                | require(config.tasksPath + '/stylus')(gulp, plugins, config);

                | //Pug Task
                | require(config.tasksPath + '/pug')(gulp, plugins, config);

                | //JS Task
                | require(config.tasksPath + '/js-compile')(gulp, plugins, config);

                | //Default Task
                | require(config.tasksPath + '/imagemin')(gulp, plugins, config);

                | //Watch Task
                | require(config.tasksPath + '/watch')(gulp, plugins, config);

                | //Default Task
                | require(config.tasksPath + '/default')(gulp, plugins, config);

    p.text Para entendermos melhor como ficou tudo, a imagem a seguir mostra como ficou a estrutura de arquivos:

    div.workflow-estrutura
        div.workflow-image
            img.image(src='img/workflow-estrutura.png')
        div.workflow-list
            ul
                li
                    span - Nome da Pasta
                    p Explicação do que tem na pasta e como irá funcionar.

    div.cf
        p.text Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
